use crate::parser::*;
use wasm_encoder::*;

impl<'a> Convert<Instruction<'a>> for wasmparser::Operator<'a> {
    fn convert(self) -> Instruction<'a> {
        match self {
            wasmparser::Operator::Unreachable => Instruction::Unreachable,
            wasmparser::Operator::Nop => Instruction::Nop,
            wasmparser::Operator::Block { blockty } => Instruction::Block(blockty.convert()),
            wasmparser::Operator::Loop { blockty } => Instruction::Loop(blockty.convert()),
            wasmparser::Operator::If { blockty } => Instruction::If(blockty.convert()),
            wasmparser::Operator::Else => Instruction::Else,
            wasmparser::Operator::Try { blockty } => Instruction::Try(blockty.convert()),
            wasmparser::Operator::Catch { tag_index } => Instruction::Catch(tag_index),
            wasmparser::Operator::Throw { tag_index } => Instruction::Throw(tag_index),
            wasmparser::Operator::Rethrow { relative_depth } => {
                Instruction::Rethrow(relative_depth)
            }
            wasmparser::Operator::End => Instruction::End,
            wasmparser::Operator::Br { relative_depth } => Instruction::Br(relative_depth),
            wasmparser::Operator::BrIf { relative_depth } => Instruction::BrIf(relative_depth),
            wasmparser::Operator::BrTable { targets } => {
                let t: Vec<_> = targets.targets().flatten().collect();
                Instruction::BrTable(t.into(), targets.default())
            }
            wasmparser::Operator::Return => Instruction::Return,
            wasmparser::Operator::Call { function_index } => Instruction::Call(function_index),
            wasmparser::Operator::CallIndirect {
                type_index,
                table_index,
                table_byte: _,
            } => Instruction::CallIndirect {
                ty: type_index,
                table: table_index,
            },
            wasmparser::Operator::ReturnCall { function_index } => {
                Instruction::ReturnCall(function_index)
            }
            wasmparser::Operator::ReturnCallIndirect {
                type_index,
                table_index,
            } => Instruction::ReturnCallIndirect {
                ty: type_index,
                table: table_index,
            },
            wasmparser::Operator::Delegate { relative_depth } => {
                Instruction::Delegate(relative_depth)
            }
            wasmparser::Operator::CatchAll => Instruction::CatchAll,
            wasmparser::Operator::Drop => Instruction::Drop,
            wasmparser::Operator::Select => Instruction::Select,
            wasmparser::Operator::TypedSelect { ty } => Instruction::TypedSelect(ty.convert()),
            wasmparser::Operator::LocalGet { local_index } => Instruction::LocalGet(local_index),
            wasmparser::Operator::LocalSet { local_index } => Instruction::LocalSet(local_index),
            wasmparser::Operator::LocalTee { local_index } => Instruction::LocalTee(local_index),
            wasmparser::Operator::GlobalGet { global_index } => {
                Instruction::GlobalGet(global_index)
            }
            wasmparser::Operator::GlobalSet { global_index } => {
                Instruction::GlobalSet(global_index)
            }
            wasmparser::Operator::I32Load { memarg } => Instruction::I32Load(memarg.convert()),
            wasmparser::Operator::I64Load { memarg } => Instruction::I64Load(memarg.convert()),
            wasmparser::Operator::F32Load { memarg } => Instruction::F32Load(memarg.convert()),
            wasmparser::Operator::F64Load { memarg } => Instruction::F64Load(memarg.convert()),
            wasmparser::Operator::I32Load8S { memarg } => Instruction::I32Load8S(memarg.convert()),
            wasmparser::Operator::I32Load8U { memarg } => Instruction::I32Load8U(memarg.convert()),
            wasmparser::Operator::I32Load16S { memarg } => {
                Instruction::I32Load16S(memarg.convert())
            }
            wasmparser::Operator::I32Load16U { memarg } => {
                Instruction::I32Load16U(memarg.convert())
            }
            wasmparser::Operator::I64Load8S { memarg } => Instruction::I64Load8S(memarg.convert()),
            wasmparser::Operator::I64Load8U { memarg } => Instruction::I64Load8U(memarg.convert()),
            wasmparser::Operator::I64Load16S { memarg } => {
                Instruction::I64Load16S(memarg.convert())
            }
            wasmparser::Operator::I64Load16U { memarg } => {
                Instruction::I64Load16U(memarg.convert())
            }
            wasmparser::Operator::I64Load32S { memarg } => {
                Instruction::I64Load32S(memarg.convert())
            }
            wasmparser::Operator::I64Load32U { memarg } => {
                Instruction::I64Load32U(memarg.convert())
            }
            wasmparser::Operator::I32Store { memarg } => Instruction::I32Store(memarg.convert()),
            wasmparser::Operator::I64Store { memarg } => Instruction::I64Store(memarg.convert()),
            wasmparser::Operator::F32Store { memarg } => Instruction::F32Store(memarg.convert()),
            wasmparser::Operator::F64Store { memarg } => Instruction::F64Store(memarg.convert()),
            wasmparser::Operator::I32Store8 { memarg } => Instruction::I32Store8(memarg.convert()),
            wasmparser::Operator::I32Store16 { memarg } => {
                Instruction::I32Store16(memarg.convert())
            }
            wasmparser::Operator::I64Store8 { memarg } => Instruction::I64Store8(memarg.convert()),
            wasmparser::Operator::I64Store16 { memarg } => {
                Instruction::I64Store16(memarg.convert())
            }
            wasmparser::Operator::I64Store32 { memarg } => {
                Instruction::I64Store32(memarg.convert())
            }
            wasmparser::Operator::MemorySize { mem, mem_byte: _ } => Instruction::MemorySize(mem),
            wasmparser::Operator::MemoryGrow { mem, mem_byte: _ } => Instruction::MemoryGrow(mem),
            wasmparser::Operator::I32Const { value } => Instruction::I32Const(value),
            wasmparser::Operator::I64Const { value } => Instruction::I64Const(value),
            wasmparser::Operator::F32Const { value } => {
                Instruction::F32Const(f32::from_bits(value.bits()))
            }
            wasmparser::Operator::F64Const { value } => {
                Instruction::F64Const(f64::from_bits(value.bits()))
            }
            wasmparser::Operator::RefNull { hty } => Instruction::RefNull(match hty {
                wasmparser::HeapType::Indexed(i) => HeapType::Indexed(i),
                wasmparser::HeapType::Func => HeapType::Func,
                wasmparser::HeapType::Extern => HeapType::Extern,
                wasmparser::HeapType::Any => HeapType::Any,
                wasmparser::HeapType::None => HeapType::None,
                wasmparser::HeapType::NoExtern => HeapType::NoExtern,
                wasmparser::HeapType::NoFunc => HeapType::NoFunc,
                wasmparser::HeapType::Eq => HeapType::Eq,
                wasmparser::HeapType::Struct => HeapType::Struct,
                wasmparser::HeapType::Array => HeapType::Array,
                wasmparser::HeapType::I31 => HeapType::I31,
            }),
            wasmparser::Operator::RefIsNull => Instruction::RefIsNull,
            wasmparser::Operator::RefFunc { function_index } => {
                Instruction::RefFunc(function_index)
            }
            wasmparser::Operator::I32Eqz => Instruction::I32Eqz,
            wasmparser::Operator::I32Eq => Instruction::I32Eq,
            wasmparser::Operator::I32Ne => Instruction::I32Ne,
            wasmparser::Operator::I32LtS => Instruction::I32LtS,
            wasmparser::Operator::I32LtU => Instruction::I32LtU,
            wasmparser::Operator::I32GtS => Instruction::I32GtS,
            wasmparser::Operator::I32GtU => Instruction::I32GtU,
            wasmparser::Operator::I32LeS => Instruction::I32LeS,
            wasmparser::Operator::I32LeU => Instruction::I32LeU,
            wasmparser::Operator::I32GeS => Instruction::I32GeS,
            wasmparser::Operator::I32GeU => Instruction::I32GeU,
            wasmparser::Operator::I64Eqz => Instruction::I64Eqz,
            wasmparser::Operator::I64Eq => Instruction::I64Eq,
            wasmparser::Operator::I64Ne => Instruction::I64Ne,
            wasmparser::Operator::I64LtS => Instruction::I64LtS,
            wasmparser::Operator::I64LtU => Instruction::I64LtU,
            wasmparser::Operator::I64GtS => Instruction::I64GtS,
            wasmparser::Operator::I64GtU => Instruction::I64GtU,
            wasmparser::Operator::I64LeS => Instruction::I64LeS,
            wasmparser::Operator::I64LeU => Instruction::I64LeU,
            wasmparser::Operator::I64GeS => Instruction::I64GeS,
            wasmparser::Operator::I64GeU => Instruction::I64GeU,
            wasmparser::Operator::F32Eq => Instruction::F32Eq,
            wasmparser::Operator::F32Ne => Instruction::F32Ne,
            wasmparser::Operator::F32Lt => Instruction::F32Lt,
            wasmparser::Operator::F32Gt => Instruction::F32Gt,
            wasmparser::Operator::F32Le => Instruction::F32Le,
            wasmparser::Operator::F32Ge => Instruction::F32Ge,
            wasmparser::Operator::F64Eq => Instruction::F64Eq,
            wasmparser::Operator::F64Ne => Instruction::F64Ne,
            wasmparser::Operator::F64Lt => Instruction::F64Lt,
            wasmparser::Operator::F64Gt => Instruction::F64Gt,
            wasmparser::Operator::F64Le => Instruction::F64Le,
            wasmparser::Operator::F64Ge => Instruction::F64Ge,
            wasmparser::Operator::I32Clz => Instruction::I32Clz,
            wasmparser::Operator::I32Ctz => Instruction::I32Ctz,
            wasmparser::Operator::I32Popcnt => Instruction::I32Popcnt,
            wasmparser::Operator::I32Add => Instruction::I32Add,
            wasmparser::Operator::I32Sub => Instruction::I32Sub,
            wasmparser::Operator::I32Mul => Instruction::I32Mul,
            wasmparser::Operator::I32DivS => Instruction::I32DivS,
            wasmparser::Operator::I32DivU => Instruction::I32DivU,
            wasmparser::Operator::I32RemS => Instruction::I32RemS,
            wasmparser::Operator::I32RemU => Instruction::I32RemU,
            wasmparser::Operator::I32And => Instruction::I32And,
            wasmparser::Operator::I32Or => Instruction::I32Or,
            wasmparser::Operator::I32Xor => Instruction::I32Xor,
            wasmparser::Operator::I32Shl => Instruction::I32Shl,
            wasmparser::Operator::I32ShrS => Instruction::I32ShrS,
            wasmparser::Operator::I32ShrU => Instruction::I32ShrU,
            wasmparser::Operator::I32Rotl => Instruction::I32Rotl,
            wasmparser::Operator::I32Rotr => Instruction::I32Rotr,
            wasmparser::Operator::I64Clz => Instruction::I64Clz,
            wasmparser::Operator::I64Ctz => Instruction::I64Ctz,
            wasmparser::Operator::I64Popcnt => Instruction::I64Popcnt,
            wasmparser::Operator::I64Add => Instruction::I64Add,
            wasmparser::Operator::I64Sub => Instruction::I64Sub,
            wasmparser::Operator::I64Mul => Instruction::I64Mul,
            wasmparser::Operator::I64DivS => Instruction::I64DivS,
            wasmparser::Operator::I64DivU => Instruction::I64DivU,
            wasmparser::Operator::I64RemS => Instruction::I64RemS,
            wasmparser::Operator::I64RemU => Instruction::I64RemU,
            wasmparser::Operator::I64And => Instruction::I64And,
            wasmparser::Operator::I64Or => Instruction::I64Or,
            wasmparser::Operator::I64Xor => Instruction::I64Xor,
            wasmparser::Operator::I64Shl => Instruction::I64Shl,
            wasmparser::Operator::I64ShrS => Instruction::I64ShrS,
            wasmparser::Operator::I64ShrU => Instruction::I64ShrU,
            wasmparser::Operator::I64Rotl => Instruction::I64Rotl,
            wasmparser::Operator::I64Rotr => Instruction::I64Rotr,
            wasmparser::Operator::F32Abs => Instruction::F32Abs,
            wasmparser::Operator::F32Neg => Instruction::F32Neg,
            wasmparser::Operator::F32Ceil => Instruction::F32Ceil,
            wasmparser::Operator::F32Floor => Instruction::F32Floor,
            wasmparser::Operator::F32Trunc => Instruction::F32Trunc,
            wasmparser::Operator::F32Nearest => Instruction::F32Nearest,
            wasmparser::Operator::F32Sqrt => Instruction::F32Sqrt,
            wasmparser::Operator::F32Add => Instruction::F32Add,
            wasmparser::Operator::F32Sub => Instruction::F32Sub,
            wasmparser::Operator::F32Mul => Instruction::F32Mul,
            wasmparser::Operator::F32Div => Instruction::F32Div,
            wasmparser::Operator::F32Min => Instruction::F32Min,
            wasmparser::Operator::F32Max => Instruction::F32Max,
            wasmparser::Operator::F32Copysign => Instruction::F32Copysign,
            wasmparser::Operator::F64Abs => Instruction::F64Abs,
            wasmparser::Operator::F64Neg => Instruction::F64Neg,
            wasmparser::Operator::F64Ceil => Instruction::F64Ceil,
            wasmparser::Operator::F64Floor => Instruction::F64Floor,
            wasmparser::Operator::F64Trunc => Instruction::F64Trunc,
            wasmparser::Operator::F64Nearest => Instruction::F64Nearest,
            wasmparser::Operator::F64Sqrt => Instruction::F64Sqrt,
            wasmparser::Operator::F64Add => Instruction::F64Add,
            wasmparser::Operator::F64Sub => Instruction::F64Sub,
            wasmparser::Operator::F64Mul => Instruction::F64Mul,
            wasmparser::Operator::F64Div => Instruction::F64Div,
            wasmparser::Operator::F64Min => Instruction::F64Min,
            wasmparser::Operator::F64Max => Instruction::F64Max,
            wasmparser::Operator::F64Copysign => Instruction::F64Copysign,
            wasmparser::Operator::I32WrapI64 => Instruction::I32WrapI64,
            wasmparser::Operator::I32TruncF32S => Instruction::I32TruncF32S,
            wasmparser::Operator::I32TruncF32U => Instruction::I32TruncF32U,
            wasmparser::Operator::I32TruncF64S => Instruction::I32TruncF64S,
            wasmparser::Operator::I32TruncF64U => Instruction::I32TruncF64U,
            wasmparser::Operator::I64ExtendI32S => Instruction::I64ExtendI32S,
            wasmparser::Operator::I64ExtendI32U => Instruction::I64ExtendI32U,
            wasmparser::Operator::I64TruncF32S => Instruction::I64TruncF32S,
            wasmparser::Operator::I64TruncF32U => Instruction::I64TruncF32U,
            wasmparser::Operator::I64TruncF64S => Instruction::I64TruncF64S,
            wasmparser::Operator::I64TruncF64U => Instruction::I64TruncF64U,
            wasmparser::Operator::F32ConvertI32S => Instruction::F32ConvertI32S,
            wasmparser::Operator::F32ConvertI32U => Instruction::F32ConvertI32U,
            wasmparser::Operator::F32ConvertI64S => Instruction::F32ConvertI64S,
            wasmparser::Operator::F32ConvertI64U => Instruction::F32ConvertI64U,
            wasmparser::Operator::F32DemoteF64 => Instruction::F32DemoteF64,
            wasmparser::Operator::F64ConvertI32S => Instruction::F64ConvertI32S,
            wasmparser::Operator::F64ConvertI32U => Instruction::F64ConvertI32U,
            wasmparser::Operator::F64ConvertI64S => Instruction::F64ConvertI64S,
            wasmparser::Operator::F64ConvertI64U => Instruction::F64ConvertI64U,
            wasmparser::Operator::F64PromoteF32 => Instruction::F64PromoteF32,
            wasmparser::Operator::I32ReinterpretF32 => Instruction::I32ReinterpretF32,
            wasmparser::Operator::I64ReinterpretF64 => Instruction::I64ReinterpretF64,
            wasmparser::Operator::F32ReinterpretI32 => Instruction::F32ReinterpretI32,
            wasmparser::Operator::F64ReinterpretI64 => Instruction::F64ReinterpretI64,
            wasmparser::Operator::I32Extend8S => Instruction::I32Extend8S,
            wasmparser::Operator::I32Extend16S => Instruction::I32Extend16S,
            wasmparser::Operator::I64Extend8S => Instruction::I64Extend8S,
            wasmparser::Operator::I64Extend16S => Instruction::I64Extend16S,
            wasmparser::Operator::I64Extend32S => Instruction::I64Extend32S,
            wasmparser::Operator::I31New => Instruction::I31New,
            wasmparser::Operator::I31GetS => Instruction::I31GetS,
            wasmparser::Operator::I31GetU => Instruction::I31GetU,
            wasmparser::Operator::I32TruncSatF32S => Instruction::I32TruncSatF32S,
            wasmparser::Operator::I32TruncSatF32U => Instruction::I32TruncSatF32U,
            wasmparser::Operator::I32TruncSatF64S => Instruction::I32TruncSatF64S,
            wasmparser::Operator::I32TruncSatF64U => Instruction::I32TruncSatF64U,
            wasmparser::Operator::I64TruncSatF32S => Instruction::I64TruncSatF32S,
            wasmparser::Operator::I64TruncSatF32U => Instruction::I64TruncSatF32U,
            wasmparser::Operator::I64TruncSatF64S => Instruction::I64TruncSatF64S,
            wasmparser::Operator::I64TruncSatF64U => Instruction::I64TruncSatF64U,
            wasmparser::Operator::MemoryInit { data_index, mem } => {
                Instruction::MemoryInit { mem, data_index }
            }
            wasmparser::Operator::DataDrop { data_index } => Instruction::DataDrop(data_index),
            wasmparser::Operator::MemoryCopy { dst_mem, src_mem } => {
                Instruction::MemoryCopy { src_mem, dst_mem }
            }
            wasmparser::Operator::MemoryFill { mem } => Instruction::MemoryFill(mem),
            wasmparser::Operator::TableInit { elem_index, table } => {
                Instruction::TableInit { elem_index, table }
            }
            wasmparser::Operator::ElemDrop { elem_index } => Instruction::ElemDrop(elem_index),
            wasmparser::Operator::TableCopy {
                dst_table,
                src_table,
            } => Instruction::TableCopy {
                src_table,
                dst_table,
            },
            wasmparser::Operator::TableFill { table } => Instruction::TableFill(table),
            wasmparser::Operator::TableGet { table } => Instruction::TableGet(table),
            wasmparser::Operator::TableSet { table } => Instruction::TableSet(table),
            wasmparser::Operator::TableGrow { table } => Instruction::TableGrow(table),
            wasmparser::Operator::TableSize { table } => Instruction::TableSize(table),
            wasmparser::Operator::MemoryDiscard { mem } => Instruction::MemoryDiscard(mem),
            wasmparser::Operator::MemoryAtomicNotify { memarg: _ } => todo!(),
            wasmparser::Operator::MemoryAtomicWait32 { memarg: _ } => todo!(),
            wasmparser::Operator::MemoryAtomicWait64 { memarg: _ } => todo!(),
            wasmparser::Operator::AtomicFence => todo!(),
            wasmparser::Operator::I32AtomicLoad { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicLoad { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicLoad8U { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicLoad16U { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicLoad8U { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicLoad16U { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicLoad32U { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicStore { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicStore { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicStore8 { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicStore16 { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicStore8 { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicStore16 { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicStore32 { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmwAdd { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmwAdd { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw8AddU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw16AddU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw8AddU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw16AddU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw32AddU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmwSub { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmwSub { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw8SubU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw16SubU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw8SubU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw16SubU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw32SubU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmwAnd { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmwAnd { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw8AndU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw16AndU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw8AndU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw16AndU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw32AndU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmwOr { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmwOr { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw8OrU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw16OrU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw8OrU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw16OrU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw32OrU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmwXor { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmwXor { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw8XorU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw16XorU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw8XorU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw16XorU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw32XorU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmwXchg { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmwXchg { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw8XchgU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw16XchgU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw8XchgU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw16XchgU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw32XchgU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmwCmpxchg { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmwCmpxchg { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw8CmpxchgU { memarg: _ } => todo!(),
            wasmparser::Operator::I32AtomicRmw16CmpxchgU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw8CmpxchgU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw16CmpxchgU { memarg: _ } => todo!(),
            wasmparser::Operator::I64AtomicRmw32CmpxchgU { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load8x8S { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load8x8U { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load16x4S { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load16x4U { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load32x2S { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load32x2U { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load8Splat { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load16Splat { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load32Splat { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load64Splat { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load32Zero { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load64Zero { memarg: _ } => todo!(),
            wasmparser::Operator::V128Store { memarg: _ } => todo!(),
            wasmparser::Operator::V128Load8Lane { memarg: _, lane: _ } => todo!(),
            wasmparser::Operator::V128Load16Lane { memarg: _, lane: _ } => todo!(),
            wasmparser::Operator::V128Load32Lane { memarg: _, lane: _ } => todo!(),
            wasmparser::Operator::V128Load64Lane { memarg: _, lane: _ } => todo!(),
            wasmparser::Operator::V128Store8Lane { memarg: _, lane: _ } => todo!(),
            wasmparser::Operator::V128Store16Lane { memarg: _, lane: _ } => todo!(),
            wasmparser::Operator::V128Store32Lane { memarg: _, lane: _ } => todo!(),
            wasmparser::Operator::V128Store64Lane { memarg: _, lane: _ } => todo!(),
            wasmparser::Operator::V128Const { value: _ } => todo!(),
            wasmparser::Operator::I8x16Shuffle { lanes: _ } => todo!(),
            wasmparser::Operator::I8x16ExtractLaneS { lane: _ } => todo!(),
            wasmparser::Operator::I8x16ExtractLaneU { lane: _ } => todo!(),
            wasmparser::Operator::I8x16ReplaceLane { lane: _ } => todo!(),
            wasmparser::Operator::I16x8ExtractLaneS { lane: _ } => todo!(),
            wasmparser::Operator::I16x8ExtractLaneU { lane: _ } => todo!(),
            wasmparser::Operator::I16x8ReplaceLane { lane: _ } => todo!(),
            wasmparser::Operator::I32x4ExtractLane { lane: _ } => todo!(),
            wasmparser::Operator::I32x4ReplaceLane { lane: _ } => todo!(),
            wasmparser::Operator::I64x2ExtractLane { lane: _ } => todo!(),
            wasmparser::Operator::I64x2ReplaceLane { lane: _ } => todo!(),
            wasmparser::Operator::F32x4ExtractLane { lane: _ } => todo!(),
            wasmparser::Operator::F32x4ReplaceLane { lane: _ } => todo!(),
            wasmparser::Operator::F64x2ExtractLane { lane: _ } => todo!(),
            wasmparser::Operator::F64x2ReplaceLane { lane: _ } => todo!(),
            wasmparser::Operator::I8x16Swizzle => todo!(),
            wasmparser::Operator::I8x16Splat => todo!(),
            wasmparser::Operator::I16x8Splat => todo!(),
            wasmparser::Operator::I32x4Splat => todo!(),
            wasmparser::Operator::I64x2Splat => todo!(),
            wasmparser::Operator::F32x4Splat => todo!(),
            wasmparser::Operator::F64x2Splat => todo!(),
            wasmparser::Operator::I8x16Eq => todo!(),
            wasmparser::Operator::I8x16Ne => todo!(),
            wasmparser::Operator::I8x16LtS => todo!(),
            wasmparser::Operator::I8x16LtU => todo!(),
            wasmparser::Operator::I8x16GtS => todo!(),
            wasmparser::Operator::I8x16GtU => todo!(),
            wasmparser::Operator::I8x16LeS => todo!(),
            wasmparser::Operator::I8x16LeU => todo!(),
            wasmparser::Operator::I8x16GeS => todo!(),
            wasmparser::Operator::I8x16GeU => todo!(),
            wasmparser::Operator::I16x8Eq => todo!(),
            wasmparser::Operator::I16x8Ne => todo!(),
            wasmparser::Operator::I16x8LtS => todo!(),
            wasmparser::Operator::I16x8LtU => todo!(),
            wasmparser::Operator::I16x8GtS => todo!(),
            wasmparser::Operator::I16x8GtU => todo!(),
            wasmparser::Operator::I16x8LeS => todo!(),
            wasmparser::Operator::I16x8LeU => todo!(),
            wasmparser::Operator::I16x8GeS => todo!(),
            wasmparser::Operator::I16x8GeU => todo!(),
            wasmparser::Operator::I32x4Eq => todo!(),
            wasmparser::Operator::I32x4Ne => todo!(),
            wasmparser::Operator::I32x4LtS => todo!(),
            wasmparser::Operator::I32x4LtU => todo!(),
            wasmparser::Operator::I32x4GtS => todo!(),
            wasmparser::Operator::I32x4GtU => todo!(),
            wasmparser::Operator::I32x4LeS => todo!(),
            wasmparser::Operator::I32x4LeU => todo!(),
            wasmparser::Operator::I32x4GeS => todo!(),
            wasmparser::Operator::I32x4GeU => todo!(),
            wasmparser::Operator::I64x2Eq => todo!(),
            wasmparser::Operator::I64x2Ne => todo!(),
            wasmparser::Operator::I64x2LtS => todo!(),
            wasmparser::Operator::I64x2GtS => todo!(),
            wasmparser::Operator::I64x2LeS => todo!(),
            wasmparser::Operator::I64x2GeS => todo!(),
            wasmparser::Operator::F32x4Eq => todo!(),
            wasmparser::Operator::F32x4Ne => todo!(),
            wasmparser::Operator::F32x4Lt => todo!(),
            wasmparser::Operator::F32x4Gt => todo!(),
            wasmparser::Operator::F32x4Le => todo!(),
            wasmparser::Operator::F32x4Ge => todo!(),
            wasmparser::Operator::F64x2Eq => todo!(),
            wasmparser::Operator::F64x2Ne => todo!(),
            wasmparser::Operator::F64x2Lt => todo!(),
            wasmparser::Operator::F64x2Gt => todo!(),
            wasmparser::Operator::F64x2Le => todo!(),
            wasmparser::Operator::F64x2Ge => todo!(),
            wasmparser::Operator::V128Not => todo!(),
            wasmparser::Operator::V128And => todo!(),
            wasmparser::Operator::V128AndNot => todo!(),
            wasmparser::Operator::V128Or => todo!(),
            wasmparser::Operator::V128Xor => todo!(),
            wasmparser::Operator::V128Bitselect => todo!(),
            wasmparser::Operator::V128AnyTrue => todo!(),
            wasmparser::Operator::I8x16Abs => todo!(),
            wasmparser::Operator::I8x16Neg => todo!(),
            wasmparser::Operator::I8x16Popcnt => todo!(),
            wasmparser::Operator::I8x16AllTrue => todo!(),
            wasmparser::Operator::I8x16Bitmask => todo!(),
            wasmparser::Operator::I8x16NarrowI16x8S => todo!(),
            wasmparser::Operator::I8x16NarrowI16x8U => todo!(),
            wasmparser::Operator::I8x16Shl => todo!(),
            wasmparser::Operator::I8x16ShrS => todo!(),
            wasmparser::Operator::I8x16ShrU => todo!(),
            wasmparser::Operator::I8x16Add => todo!(),
            wasmparser::Operator::I8x16AddSatS => todo!(),
            wasmparser::Operator::I8x16AddSatU => todo!(),
            wasmparser::Operator::I8x16Sub => todo!(),
            wasmparser::Operator::I8x16SubSatS => todo!(),
            wasmparser::Operator::I8x16SubSatU => todo!(),
            wasmparser::Operator::I8x16MinS => todo!(),
            wasmparser::Operator::I8x16MinU => todo!(),
            wasmparser::Operator::I8x16MaxS => todo!(),
            wasmparser::Operator::I8x16MaxU => todo!(),
            wasmparser::Operator::I8x16AvgrU => todo!(),
            wasmparser::Operator::I16x8ExtAddPairwiseI8x16S => todo!(),
            wasmparser::Operator::I16x8ExtAddPairwiseI8x16U => todo!(),
            wasmparser::Operator::I16x8Abs => todo!(),
            wasmparser::Operator::I16x8Neg => todo!(),
            wasmparser::Operator::I16x8Q15MulrSatS => todo!(),
            wasmparser::Operator::I16x8AllTrue => todo!(),
            wasmparser::Operator::I16x8Bitmask => todo!(),
            wasmparser::Operator::I16x8NarrowI32x4S => todo!(),
            wasmparser::Operator::I16x8NarrowI32x4U => todo!(),
            wasmparser::Operator::I16x8ExtendLowI8x16S => todo!(),
            wasmparser::Operator::I16x8ExtendHighI8x16S => todo!(),
            wasmparser::Operator::I16x8ExtendLowI8x16U => todo!(),
            wasmparser::Operator::I16x8ExtendHighI8x16U => todo!(),
            wasmparser::Operator::I16x8Shl => todo!(),
            wasmparser::Operator::I16x8ShrS => todo!(),
            wasmparser::Operator::I16x8ShrU => todo!(),
            wasmparser::Operator::I16x8Add => todo!(),
            wasmparser::Operator::I16x8AddSatS => todo!(),
            wasmparser::Operator::I16x8AddSatU => todo!(),
            wasmparser::Operator::I16x8Sub => todo!(),
            wasmparser::Operator::I16x8SubSatS => todo!(),
            wasmparser::Operator::I16x8SubSatU => todo!(),
            wasmparser::Operator::I16x8Mul => todo!(),
            wasmparser::Operator::I16x8MinS => todo!(),
            wasmparser::Operator::I16x8MinU => todo!(),
            wasmparser::Operator::I16x8MaxS => todo!(),
            wasmparser::Operator::I16x8MaxU => todo!(),
            wasmparser::Operator::I16x8AvgrU => todo!(),
            wasmparser::Operator::I16x8ExtMulLowI8x16S => todo!(),
            wasmparser::Operator::I16x8ExtMulHighI8x16S => todo!(),
            wasmparser::Operator::I16x8ExtMulLowI8x16U => todo!(),
            wasmparser::Operator::I16x8ExtMulHighI8x16U => todo!(),
            wasmparser::Operator::I32x4ExtAddPairwiseI16x8S => todo!(),
            wasmparser::Operator::I32x4ExtAddPairwiseI16x8U => todo!(),
            wasmparser::Operator::I32x4Abs => todo!(),
            wasmparser::Operator::I32x4Neg => todo!(),
            wasmparser::Operator::I32x4AllTrue => todo!(),
            wasmparser::Operator::I32x4Bitmask => todo!(),
            wasmparser::Operator::I32x4ExtendLowI16x8S => todo!(),
            wasmparser::Operator::I32x4ExtendHighI16x8S => todo!(),
            wasmparser::Operator::I32x4ExtendLowI16x8U => todo!(),
            wasmparser::Operator::I32x4ExtendHighI16x8U => todo!(),
            wasmparser::Operator::I32x4Shl => todo!(),
            wasmparser::Operator::I32x4ShrS => todo!(),
            wasmparser::Operator::I32x4ShrU => todo!(),
            wasmparser::Operator::I32x4Add => todo!(),
            wasmparser::Operator::I32x4Sub => todo!(),
            wasmparser::Operator::I32x4Mul => todo!(),
            wasmparser::Operator::I32x4MinS => todo!(),
            wasmparser::Operator::I32x4MinU => todo!(),
            wasmparser::Operator::I32x4MaxS => todo!(),
            wasmparser::Operator::I32x4MaxU => todo!(),
            wasmparser::Operator::I32x4DotI16x8S => todo!(),
            wasmparser::Operator::I32x4ExtMulLowI16x8S => todo!(),
            wasmparser::Operator::I32x4ExtMulHighI16x8S => todo!(),
            wasmparser::Operator::I32x4ExtMulLowI16x8U => todo!(),
            wasmparser::Operator::I32x4ExtMulHighI16x8U => todo!(),
            wasmparser::Operator::I64x2Abs => todo!(),
            wasmparser::Operator::I64x2Neg => todo!(),
            wasmparser::Operator::I64x2AllTrue => todo!(),
            wasmparser::Operator::I64x2Bitmask => todo!(),
            wasmparser::Operator::I64x2ExtendLowI32x4S => todo!(),
            wasmparser::Operator::I64x2ExtendHighI32x4S => todo!(),
            wasmparser::Operator::I64x2ExtendLowI32x4U => todo!(),
            wasmparser::Operator::I64x2ExtendHighI32x4U => todo!(),
            wasmparser::Operator::I64x2Shl => todo!(),
            wasmparser::Operator::I64x2ShrS => todo!(),
            wasmparser::Operator::I64x2ShrU => todo!(),
            wasmparser::Operator::I64x2Add => todo!(),
            wasmparser::Operator::I64x2Sub => todo!(),
            wasmparser::Operator::I64x2Mul => todo!(),
            wasmparser::Operator::I64x2ExtMulLowI32x4S => todo!(),
            wasmparser::Operator::I64x2ExtMulHighI32x4S => todo!(),
            wasmparser::Operator::I64x2ExtMulLowI32x4U => todo!(),
            wasmparser::Operator::I64x2ExtMulHighI32x4U => todo!(),
            wasmparser::Operator::F32x4Ceil => todo!(),
            wasmparser::Operator::F32x4Floor => todo!(),
            wasmparser::Operator::F32x4Trunc => todo!(),
            wasmparser::Operator::F32x4Nearest => todo!(),
            wasmparser::Operator::F32x4Abs => todo!(),
            wasmparser::Operator::F32x4Neg => todo!(),
            wasmparser::Operator::F32x4Sqrt => todo!(),
            wasmparser::Operator::F32x4Add => todo!(),
            wasmparser::Operator::F32x4Sub => todo!(),
            wasmparser::Operator::F32x4Mul => todo!(),
            wasmparser::Operator::F32x4Div => todo!(),
            wasmparser::Operator::F32x4Min => todo!(),
            wasmparser::Operator::F32x4Max => todo!(),
            wasmparser::Operator::F32x4PMin => todo!(),
            wasmparser::Operator::F32x4PMax => todo!(),
            wasmparser::Operator::F64x2Ceil => todo!(),
            wasmparser::Operator::F64x2Floor => todo!(),
            wasmparser::Operator::F64x2Trunc => todo!(),
            wasmparser::Operator::F64x2Nearest => todo!(),
            wasmparser::Operator::F64x2Abs => todo!(),
            wasmparser::Operator::F64x2Neg => todo!(),
            wasmparser::Operator::F64x2Sqrt => todo!(),
            wasmparser::Operator::F64x2Add => todo!(),
            wasmparser::Operator::F64x2Sub => todo!(),
            wasmparser::Operator::F64x2Mul => todo!(),
            wasmparser::Operator::F64x2Div => todo!(),
            wasmparser::Operator::F64x2Min => todo!(),
            wasmparser::Operator::F64x2Max => todo!(),
            wasmparser::Operator::F64x2PMin => todo!(),
            wasmparser::Operator::F64x2PMax => todo!(),
            wasmparser::Operator::I32x4TruncSatF32x4S => todo!(),
            wasmparser::Operator::I32x4TruncSatF32x4U => todo!(),
            wasmparser::Operator::F32x4ConvertI32x4S => todo!(),
            wasmparser::Operator::F32x4ConvertI32x4U => todo!(),
            wasmparser::Operator::I32x4TruncSatF64x2SZero => todo!(),
            wasmparser::Operator::I32x4TruncSatF64x2UZero => todo!(),
            wasmparser::Operator::F64x2ConvertLowI32x4S => todo!(),
            wasmparser::Operator::F64x2ConvertLowI32x4U => todo!(),
            wasmparser::Operator::F32x4DemoteF64x2Zero => todo!(),
            wasmparser::Operator::F64x2PromoteLowF32x4 => todo!(),
            wasmparser::Operator::I8x16RelaxedSwizzle => todo!(),
            wasmparser::Operator::I32x4RelaxedTruncF32x4S => todo!(),
            wasmparser::Operator::I32x4RelaxedTruncF32x4U => todo!(),
            wasmparser::Operator::I32x4RelaxedTruncF64x2SZero => todo!(),
            wasmparser::Operator::I32x4RelaxedTruncF64x2UZero => todo!(),
            wasmparser::Operator::F32x4RelaxedMadd => todo!(),
            wasmparser::Operator::F32x4RelaxedNmadd => todo!(),
            wasmparser::Operator::F64x2RelaxedMadd => todo!(),
            wasmparser::Operator::F64x2RelaxedNmadd => todo!(),
            wasmparser::Operator::I8x16RelaxedLaneselect => todo!(),
            wasmparser::Operator::I16x8RelaxedLaneselect => todo!(),
            wasmparser::Operator::I32x4RelaxedLaneselect => todo!(),
            wasmparser::Operator::I64x2RelaxedLaneselect => todo!(),
            wasmparser::Operator::F32x4RelaxedMin => todo!(),
            wasmparser::Operator::F32x4RelaxedMax => todo!(),
            wasmparser::Operator::F64x2RelaxedMin => todo!(),
            wasmparser::Operator::F64x2RelaxedMax => todo!(),
            wasmparser::Operator::I16x8RelaxedQ15mulrS => todo!(),
            wasmparser::Operator::I16x8RelaxedDotI8x16I7x16S => todo!(),
            wasmparser::Operator::I32x4RelaxedDotI8x16I7x16AddS => todo!(),
            wasmparser::Operator::CallRef { type_index } => Instruction::CallRef(type_index),
            wasmparser::Operator::ReturnCallRef { type_index } => {
                Instruction::ReturnCallRef(type_index)
            }
            wasmparser::Operator::RefAsNonNull => Instruction::RefAsNonNull,
            wasmparser::Operator::BrOnNull { relative_depth } => {
                Instruction::BrOnNonNull(relative_depth)
            }
            wasmparser::Operator::BrOnNonNull { relative_depth } => {
                Instruction::BrOnNonNull(relative_depth)
            }
        }
    }
}
